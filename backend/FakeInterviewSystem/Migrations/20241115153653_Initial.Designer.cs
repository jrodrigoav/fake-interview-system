// <auto-generated />
using System;
using FakeInterviewSystem.Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FakeInterviewSystem.Migrations
{
    [DbContext(typeof(InterviewSystemDbContext))]
    [Migration("20241115153653_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.CenterOfExcellence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("COES");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpectedAnswer")
                        .HasMaxLength(600)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CenterOfExcellenceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CenterOfExcellenceId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Question", b =>
                {
                    b.HasOne("FakeInterviewSystem.Models.Data.Section", "Section")
                        .WithMany("Questions")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Section", b =>
                {
                    b.HasOne("FakeInterviewSystem.Models.Data.Topic", "Topic")
                        .WithMany("Sections")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Topic", b =>
                {
                    b.HasOne("FakeInterviewSystem.Models.Data.CenterOfExcellence", "CenterOfExcellence")
                        .WithMany("Topics")
                        .HasForeignKey("CenterOfExcellenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CenterOfExcellence");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.CenterOfExcellence", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Section", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("FakeInterviewSystem.Models.Data.Topic", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
